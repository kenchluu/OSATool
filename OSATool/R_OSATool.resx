<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Bt_Define.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>